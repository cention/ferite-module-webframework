
namespace modifies GUIKit {
    
    class TextView extends GUIKit.View { 
		
		constructor() {
			super();
			.setHeight('150px');
		}
		
		static function formValue( void value ) {
			if( value isa string )
				return value;
			if( value isa array ) {
				if( Array.size(value) == 1 and not value.keyExists('New') ) {
					return '';
				} else {
					return value['New'];
				}				
			}
			return '';
		}
		function handleFormValue( void value ) {
			.setTextValue(GUIKit.TextView.formValue(value));
		}
		
        function defaultWidth()
            return '400';

		boolean richText = false;
		function setRichText( void value ) {
			.richText = .stringToBoolean("$value");
		}
		function generateAttributes() {
			array a = super.generateAttributes();
			a['RichText'] = (.richText ? 'true' : 'false');
			return a;
		}
        function render() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfTextView');
				if( not .richText )
					values.del('RichText');
				else {
					if( (.size.height - 'px').toNumber() < 200 ) {
						.setHeight('200px');
					}
					values['RichTextBasePath'] = __uriForResource( "fckeditor", "Javascript" ) + '/';
					values['RichTextHeight'] = .size.height - 'px';
				}
				return .templateRender('ComponentTextView', values);
			}
			return "";
        }                    
    }
}
