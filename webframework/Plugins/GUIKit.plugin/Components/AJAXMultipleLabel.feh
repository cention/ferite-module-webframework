
namespace modifies GUIKit {
    
	class AJAXMultipleLabelItem extends GUIKit.View {
		
		string fontSize;
		
        function defaultWidth()
            return "";
        
		function setFontSize( string value )
            .fontSize = value;
		
        function generateAttributes() {
            array a = super.generateAttributes();
            a['FontSize'] = .fontSize;
            return a;
        }
        function styleSheetSettings() {
            string s = super.styleSheetSettings();
            if( .fontSize != "" ) s += "font-size:${.fontSize};";
            return s;
        }
        function render() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfAJAXLabel');
				values['ParentID'] = "${.id}Parent";
				values['EventCode'] = '';
				return .templateRender('ComponentAJAXLabel', values);
			}
			return "";
        }  
	}
	
    class AJAXMultipleLabel extends GUIKit.Container {
        
		string statusContainer;
		
		function setStatusContainer( string value ) {
			.statusContainer = value;
		}
        function handleChildren( array children, object renderEngine ) {
            Array.each( children ) using ( child ) {
                array a = child.getNamespace();
                if( (Array.keyExists( a, "wf" ) and child.getElementName() == 'AJAXMultipleLabelItem') )
                {
                    array attributes = child.getAttributes();
                    if( Array.keyExists(attributes,"ID") )
                        .contents[] = attributes["ID"];
                } else if( child.hasChildren() ) {
					.handleChildren( child.getChildren(), renderEngine );
				}
            };
        }
		function renderContainerStart() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfAJAXMultipleLabel');
				Array.each( .contents ) using ( item ) {
					object o = Cache.components[item];
					o.setWidth(.size.width);
				};
				values['Items'] = .contents;
				values['StatusContainer'] = .statusContainer;
				values['TargetURI'] = uriForCurrentPageActions();
				if( .contents ) values['EventCode'] = 'true';
				return .templateRender('ComponentAJAXMultipleLabel', 'ContainerStart', values);
			}
			return '';
		}
        function renderContainerEnd() {
            if( .visible() ) {
				array values = .generateTemplateAttributes('wfAJAXMultipleLabel');
				values['Items'] = .contents;
				values['StatusContainer'] = .statusContainer;
				values['TargetURI'] = uriForCurrentPageActions();
				if( .contents ) values['EventCode'] = 'true';
				return .templateRender('ComponentAJAXMultipleLabel', 'ContainerEnd', values);
			}
            return "";
        }
    }
}
