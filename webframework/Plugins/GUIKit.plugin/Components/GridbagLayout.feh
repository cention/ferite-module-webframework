namespace modifies GUIKit {
	
	class GridbagLayout extends GUIKit.View {
		
		array viewList;
		array widths;
		array align;
		number columns = 2;
		
		constructor() {
			super();
			.widths = [ '40%', '60%' ];
			.align = [ 'left', 'left' ];
		}
		function add( number value ) {
			.viewList[] = "$value";
		}
		function add( string value ) {
			.viewList[] = value;
		}
		function add( object value ) {
			if( value instanceof GUIKit.View )
				.viewList[] = value.render();
			else
				.viewList[] = value.toString();
		}
		function setColumns( number value ) {
			.columns = value;
		}
		function setColumnWidths( array value ) {
			.widths = value;
		}
		function setColumnAlign( array value ) {
			.align = value;
		}
		function render() {
			if( .visible() ) {
				array values = .generateTemplateAttributes('wfGridbagLayout');
				array rows = [];
				number currentColumn = 0, currentView = 0, currentRow = 0;
				
				while( currentView < .viewList.size() ) {
					array row = [];
					while( currentColumn < .columns ) {
						string style = ((currentRow % 2 == 1) ? 'background-color: #fff;' : 'background-color: #eee;') + 'height:30px;';
						row[] = [ 'TextValue' => .viewList[currentView], 'Style' => style, 'Width' => .widths[currentColumn], 'Align' => .align[currentColumn] ];
						currentColumn++;
						currentView++;
					}
					currentRow++;
					currentColumn = 0;
					rows[]  = row;
				}
				values['Rows'] = rows;
				debug( __FILE__, __LINE__, '' + values );
				return .templateRender( 'ComponentGridbagLayout', values );
			}
			return '';
		}
	}
}