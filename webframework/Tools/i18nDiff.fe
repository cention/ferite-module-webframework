uses "/cention/etc/webframework-config.feh";
uses "webframework/webframework";
uses "posix";

function processString( string key ) {
	I18N.cleanString(key);
}
array master = [];
array translation = [];
array toAdd;

string applicationName = argv[0];
string language = argv[1];
string translationFile = "${Config.PublicPath}/Applications/$applicationName.app/Resources/Strings/$language/translation.strings.fe";

master = include("${Config.PublicPath}/Applications/$applicationName.app/Resources/Strings/Master.strings.fe");

monitor { 
	translation = include(translationFile);
} handle {
	Console.println("Unable to load translation for language $language");
}

master.keys().each() using ( key ) {
	if( not translation.keyExists(key) ) {
		Console.println( "+ Adding '$key' to translation");
		translation[key] = key;
		toAdd[key] = true;
	}
};
translation.keys().each() using ( key ) {
	if( not master.keyExists(key) ) {
		Console.println( "- Removing '$key' from translation");
		translation.del(key);
	}
};

File.remove(translationFile);
File.create(translationFile) using ( file ) {
	Console.println(translationFile);
	file.writeln( 'return [' );
	file.writeln( translation.keys().sort().join(",\n") using ( key ) {
		string comment = (toAdd[key] or (key == translation[key]) ? ' /* New */' : '');
		return "\t'${I18N.cleanString(key)}' => $comment '${I18N.cleanString(translation[key])}'";
	});
	file.writeln( '];' );
};
