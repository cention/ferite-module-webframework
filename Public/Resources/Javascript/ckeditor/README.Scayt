Notes about implementing your own Spell checking as you type plugin for
Ckeditor.


Good things to do before implementing

 - Extract changes made to current Ckeditor version.
 - Update Ckeditor to latest version.
 - Patch Ckeditor with extracted changes.


The general idea of how to implement it (spell checking as you type)

 - In some way get the last modified/newly entered text/html.
   (Checking whole document is too slow. Plus it causes other problems)
   (It could work to just get the latest entered word when pressing space)
   (In range.js there are functions to create bookmarks. These are something
    that might be useful)

 - Save caret position.
 
 - Add <span></span> tags around the words in the selection.
 
 - Reset caret position.
   (Remember if <span></span> tags have been added you can't just reset to
    the original position. You have to calculate a new position based on how
    many tags you added)
 
 - Perform spell checking on words in selection.
 
 - Highlight misspelled words.


The scayt plugin included in Ckeditor seams to do this that is a good thing.
If something is being entered inside the <span></span> tags which marks a word
the <span></span> tags (or maybe just the highlighting) are removed.
This is to ensure that the highlighting does not stretch multiple words.


How to reset caret position using Ckedtior API.

var selection = editor.getSelection();
var ranges = selection.getRanges();
ranges[0].select();

There seams to be a bug in the above code in Internet Explorer.
If something is entered at the end of the document some object does not seam
to be set. This can be ignored. The caret is at the position it should be.



