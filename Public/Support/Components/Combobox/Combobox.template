<table border="0" cellpadding="0" cellspacing="0" class="wfComboboxWrapper" [StyleClass:class="[]"] [Style:style="[]"]>
	<tr>
		<td style="width:100%;"><input id="[ID]" name="[ID]%%%[%%%new%%%]%%%" class="wfComboboxTextfield" type="text" value="[TextValue]" [!textfieldEnabled:readonly="readonly"] autocomplete="off" style="margin:0px;"/></td>
		[icon:<td ID="[.ID]_icon" class="wfComboboxIcon"><img src="[]" /></td>]
	</tr>
</table>
<div class="autocomplete" id="[ID]_auto_complete"></div>
<div class="wfComboboxList" id="[ID]_list" style="display: none;"><ul></ul></div>
<input name="[ID]%%%[%%%old%%%]%%%" type="hidden" value="[TextValue]" />
<script type="text/javascript" charset="utf-8">
	SetComponent('[ID]', ComponentCombobox('[ID]'));
	_('[ID]').setFormValueTarget('[ID]')
	_('[ID]').setState('textfield-enabled', [textfieldEnabled]);
	_('[ID]').setState('list-enabled', [listEnabled]);
	_('[ID]').setState('text-value', '[TextValue]');
	_('[ID]').setItems([items]);
	function [ID]_selectDidChange(text, li) {
		try {
			_('[ID]').action('selected-item', text, li);
		} catch(e) {}
	}'[ID]', '[ID]', '[ID]_auto_complete',
	new Autocompleter.MCAM('[ID]', '[ID]', '[ID]_auto_complete', {
		minChars: 4,
		afterUpdateElement : [ID]_selectDidChange[above:,
		onShow: function(element, update){ 
			update.style.position = 'absolute';
			Position.clone(element, update, {
				setHeight: false, 
				offsetTop: 0 - (update.firstChild.childNodes.length * 20)
			});
			
		}]
	});
	_('[ID]').activate();
</script>
