namespace modifies GUIKit {
	class CSimpleComboboxDataSource {
		object _combobox;
		array _items;
		function constructor( object combobox ) {
			._combobox = combobox;
		}
		function append( array item ) {
			if( item.keyExists( 'TextValue' ) ) {
				.append( item['TextValue'] );
			}
		}
		function append( string item ) {
			._items[] = '<li onclick="_(\'{0:id}\').node().value = \'{1:item}\'; _(\'{0:id}\').hideList();">{1:item}</li>'.expand( ._combobox.id, item );
		}
		function items {
			return ._items;
		}
	}
	class CCombobox extends GUIKit.CTextfield {
		object source;
		function initialiseComponent {
			super.initialiseComponent();
		}
		function _createDataSource {
			if( not .source ) {
				.source = new GUIKit.CSimpleComboboxDataSource( self );
			}
		}
		function setDataSource( array source ) {
			._createDataSource();
			source.each() using ( item ) {
				.source.append( item );
			};
		}
		function render {
			if( .visible() ) {
				array values = .generateTemplateAttributes( 'wfCombobox' );
				object component = GUIKit.componentByName( 'Combobox' );
				string path = component.pathForComponentResource( 'Combobox.template' );
				if( .source ) {
					values['Items'] = .source.items();
				}
				return GUIKit.ViewTemplate.renderPath( path, values );
			}
			return "";
		}
	}
}

